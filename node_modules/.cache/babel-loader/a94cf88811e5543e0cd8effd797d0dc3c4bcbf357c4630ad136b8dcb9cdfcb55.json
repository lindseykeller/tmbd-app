{"ast":null,"code":"var _jsxFileName = \"/Users/lindseykeller/Desktop/tmbd-app/src/components/ModalContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport YouTube from \"react-youtube\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContent = ({\n  id,\n  onClose\n}) => {\n  _s();\n  const [videoId, setVideoId] = useState(\"\");\n  // const [youTubeLink, setYouTubeLink] = useState(\"\");\n  const closeButtonRef = useRef(null); // Ref for the close button\n  const modalRef = useRef(null); // Ref for the modal container\n\n  const opts = {\n    height: \"390\",\n    width: \"840\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  const styles = {\n    position: \"fixed\",\n    right: \"0\",\n    bottom: \"0\",\n    top: \"20%\",\n    left: \"23%\"\n  };\n  const fetchVideo = async () => {\n    var _data$results$;\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${process.env.REACT_APP_MOVIE_KEY}`);\n    console.log(data);\n    setVideoId(data === null || data === void 0 ? void 0 : (_data$results$ = data.results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.key);\n  };\n  useEffect(() => {\n    fetchVideo();\n  }, []);\n  useEffect(() => {\n    // Effect to handle focus and keyboard navigation\n    // Focus the close button when the modal opens\n    if (closeButtonRef.current) {\n      // Check if close button ref is set\n      closeButtonRef.current.focus(); // Focus the close button\n    }\n\n    const handleKeyDown = event => {\n      // Function to handle keydown events\n      if (event.key === \"Escape\") {\n        // Check if Escape key is pressed\n        onClose(); // Call onClose function to close the modal\n      }\n\n      // Handle Tab key to trap focus between close button and YouTube play/pause button\n      if (event.key === \"Tab\") {\n        // Check if Tab key is pressed\n        const playPauseButton = document.querySelector(\".ytp-large-play-button\"); // Select YouTube play/pause button\n\n        if (event.shiftKey) {\n          // Check if Shift key is also pressed\n          // Shift + Tab\n          if (document.activeElement === closeButtonRef.current) {\n            // If focus is on the close button\n            event.preventDefault(); // Prevent default behavior\n            playPauseButton.focus(); // Focus on the play/pause button\n          }\n        } else {\n          // If not holding Shift\n          // Tab\n          if (document.activeElement === playPauseButton) {\n            // If focus is on the play/pause button\n            event.preventDefault(); // Prevent default behavior\n            closeButtonRef.current.focus(); // Focus on the close button\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown); // Attach keydown event listener to the window\n    return () => {\n      // Cleanup function\n      window.removeEventListener(\"keydown\", handleKeyDown); // Remove event listener on unmount\n    };\n  }, [onClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      ref: closeButtonRef,\n      onClick: onClose,\n      tabIndex: \"0\",\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: videoId,\n      opts: opts\n      // Attach the ref to the YouTube component\n      ,\n      tabIndex: \"0\" // Make the YouTube frame focusable\n      ,\n\n      style: styles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalContent, \"ceWtUzBOBpPAlr43HRFoGBlGMB8=\");\n_c = ModalContent;\nexport default ModalContent;\nvar _c;\n$RefreshReg$(_c, \"ModalContent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","YouTube","axios","jsxDEV","_jsxDEV","ModalContent","id","onClose","_s","videoId","setVideoId","closeButtonRef","modalRef","opts","height","width","playerVars","autoplay","styles","position","right","bottom","top","left","fetchVideo","_data$results$","data","get","process","env","REACT_APP_MOVIE_KEY","console","log","results","key","current","focus","handleKeyDown","event","playPauseButton","document","querySelector","shiftKey","activeElement","preventDefault","window","addEventListener","removeEventListener","children","ref","onClick","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["/Users/lindseykeller/Desktop/tmbd-app/src/components/ModalContent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport YouTube from \"react-youtube\";\nimport axios from \"axios\";\n\nconst ModalContent = ({ id, onClose }) => {\n  const [videoId, setVideoId] = useState(\"\");\n  // const [youTubeLink, setYouTubeLink] = useState(\"\");\n  const closeButtonRef = useRef(null); // Ref for the close button\n  const modalRef = useRef(null); // Ref for the modal container\n\n  const opts = {\n    height: \"390\",\n    width: \"840\",\n\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n\n  const styles = {\n    position: \"fixed\",\n\n    right: \"0\",\n    bottom: \"0\",\n    top: \"20%\",\n    left: \"23%\",\n  };\n\n  const fetchVideo = async () => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${process.env.REACT_APP_MOVIE_KEY}`\n    );\n    console.log(data);\n    setVideoId(data?.results[0]?.key);\n  };\n  useEffect(() => {\n    fetchVideo();\n  }, []);\n  useEffect(() => { // Effect to handle focus and keyboard navigation\n    // Focus the close button when the modal opens\n    if (closeButtonRef.current) { // Check if close button ref is set\n      closeButtonRef.current.focus(); // Focus the close button\n    }\n\n    const handleKeyDown = (event) => { // Function to handle keydown events\n      if (event.key === \"Escape\") { // Check if Escape key is pressed\n        onClose(); // Call onClose function to close the modal\n      }\n\n      // Handle Tab key to trap focus between close button and YouTube play/pause button\n      if (event.key === \"Tab\") { // Check if Tab key is pressed\n        const playPauseButton = document.querySelector(\".ytp-large-play-button\"); // Select YouTube play/pause button\n\n        if (event.shiftKey) { // Check if Shift key is also pressed\n          // Shift + Tab\n          if (document.activeElement === closeButtonRef.current) { // If focus is on the close button\n            event.preventDefault(); // Prevent default behavior\n            playPauseButton.focus(); // Focus on the play/pause button\n          }\n        } else { // If not holding Shift\n          // Tab\n          if (document.activeElement === playPauseButton) { // If focus is on the play/pause button\n            event.preventDefault(); // Prevent default behavior\n            closeButtonRef.current.focus(); // Focus on the close button\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown); // Attach keydown event listener to the window\n    return () => { // Cleanup function\n      window.removeEventListener(\"keydown\", handleKeyDown); // Remove event listener on unmount\n    };\n  }, [onClose]); \n  return (\n    <div>\n        <button ref={closeButtonRef} onClick={onClose}  tabIndex=\"0\" >Close</button> {/* Close Button */}\n      <YouTube \n      videoId={videoId}\n       opts={opts}\n       // Attach the ref to the YouTube component\n        tabIndex=\"0\" // Make the YouTube frame focusable\n      \n      style={styles}  />;\n    </div>\n  );\n};\n\nexport default ModalContent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}