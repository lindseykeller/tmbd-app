{"ast":null,"code":"var _jsxFileName = \"/Users/lindseykeller/Desktop/tmbd-app/src/components/Genres.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MuiChipCustom from \"./componentStyling/MuiChipCustom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Genres = ({\n  genres,\n  setGenres,\n  selectedGenres,\n  setSelectedGenres\n}) => {\n  _s();\n  const fetchGenres = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_MOVIE_KEY}`);\n    setGenres(data === null || data === void 0 ? void 0 : data.genres);\n  };\n  useEffect(() => {\n    fetchGenres();\n  }, []);\n  //handle add\n  const handleAddGenres = genre => {\n    setSelectedGenres([...selectedGenres, genre]);\n    setGenres(genres === null || genres === void 0 ? void 0 : genres.filter(g => (g === null || g === void 0 ? void 0 : g.id) !== (genre === null || genre === void 0 ? void 0 : genre.id)));\n  };\n  // Handle remove\n  const handleRemoveGenres = genre => {\n    setSelectedGenres(selectedGenres === null || selectedGenres === void 0 ? void 0 : selectedGenres.filter(selected => (selected === null || selected === void 0 ? void 0 : selected.id) !== (genre === null || genre === void 0 ? void 0 : genre.id)));\n    setGenres([...genres, genre]);\n  };\n\n  // Handle key press for closing the chip\n  const handleKeyDown = (event, genre) => {\n    if (event.key === \"Enter\" || event.key === \" \") {\n      event.preventDefault(); // Prevent default behavior for space\n      handleRemoveGenres(genre); // Call the remove handler\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genreContainer\",\n    children: [selectedGenres === null || selectedGenres === void 0 ? void 0 : selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(MuiChipCustom, {\n      clickable: true,\n      label: genre.name,\n      onDelete: () => handleRemoveGenres(genre),\n      onKeyDown: event => handleKeyDown(event, genre) // Handle keyboard events\n      ,\n      tabIndex: 0 // Make it focusable\n      ,\n      id: \"genreChip\",\n      \"aria-label\": `Remove ${genre.name}`\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)), genres.map(genre => /*#__PURE__*/_jsxDEV(MuiChipCustom, {\n      label: genre === null || genre === void 0 ? void 0 : genre.name,\n      onClick: () => handleAddGenres(genre),\n      clickable: true,\n      id: \"genreChip\",\n      \"aria-label\": `Filter by ${genre.name}`\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Genres, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Genres;\nexport default Genres;\nvar _c;\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["React","useState","useEffect","axios","MuiChipCustom","jsxDEV","_jsxDEV","Genres","genres","setGenres","selectedGenres","setSelectedGenres","_s","fetchGenres","data","get","process","env","REACT_APP_MOVIE_KEY","handleAddGenres","genre","filter","g","id","handleRemoveGenres","selected","handleKeyDown","event","key","preventDefault","className","children","map","clickable","label","name","onDelete","onKeyDown","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/lindseykeller/Desktop/tmbd-app/src/components/Genres.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MuiChipCustom from \"./componentStyling/MuiChipCustom\";\n\nconst Genres = ({genres, setGenres, selectedGenres, setSelectedGenres}) => {\n    const fetchGenres = async () => {\n     const {data} =   await axios.get(\n            `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_MOVIE_KEY}`\n        );\n        setGenres(data?.genres);\n    };\n    useEffect(() =>{\n        fetchGenres();\n    }, []);\n    //handle add\n    const handleAddGenres = genre => {\n        setSelectedGenres([...selectedGenres, genre]);\n        setGenres(genres?.filter( g => g?.id !== genre?.id))\n    }\n // Handle remove\n const handleRemoveGenres = (genre) => {\n    setSelectedGenres(\n      selectedGenres?.filter((selected) => selected?.id !== genre?.id)\n    );\n    setGenres([...genres, genre]);\n  };\n\n  // Handle key press for closing the chip\n  const handleKeyDown = (event, genre) => {\n    if (event.key === \"Enter\" || event.key === \" \") {\n      event.preventDefault(); // Prevent default behavior for space\n      handleRemoveGenres(genre); // Call the remove handler\n    }\n  };\n    return (\n        <div className =\"genreContainer\">\n        {selectedGenres?.map(genre => (\n        <MuiChipCustom\n        key={genre.id}\n     \n        clickable \n        label={genre.name}\n        onDelete={() => handleRemoveGenres(genre)}\n        onKeyDown={(event) => handleKeyDown(event, genre)} // Handle keyboard events\n        tabIndex={0} // Make it focusable\n       id = \"genreChip\"\n       aria-label={`Remove ${genre.name}`} \n\n        />\n        ))}\n          {genres.map(genre=>( \n          <MuiChipCustom \n          key={genre.id}\n          label = {genre?.name}\n          onClick ={() => handleAddGenres(genre)}\n          clickable\n          \n          id = \"genreChip\"\n          aria-label={`Filter by ${genre.name}`} \n          />)\n             \n          )}\n        </div>\n    )\n};\n\n\nexport default Genres;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}