{"ast":null,"code":"var _jsxFileName = \"/Users/lindseykeller/Desktop/tmbd-app/src/components/Genres.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Chip } from '@mui/material';\nimport axios from \"axios\";\nimport { styled } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MuiChipCustom = styled(Chip)(() => ({\n  backgroundColor: 'lightblue',\n  borderRadius: 2,\n  color: 'white',\n  '& .MuiChip-label': {\n    color: 'blue',\n    //using the MUI chip label properties\n    fontSize: 20\n  },\n  '& .MuiChip-deleteIcon': {\n    color: 'blue',\n    fontSize: 20\n  }\n}));\n_c = MuiChipCustom;\nconst Genres = ({\n  genres,\n  setGenres,\n  selectedGenres,\n  setSelectedGenres\n}) => {\n  _s();\n  const fetchGenres = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_MOVIE_KEY}`);\n    setGenres(data === null || data === void 0 ? void 0 : data.genres);\n  };\n  useEffect(() => {\n    fetchGenres();\n  }, []);\n  //handle add\n  const handleAddGenres = genre => {\n    setSelectedGenres([...selectedGenres, genre]);\n    setGenres(genres === null || genres === void 0 ? void 0 : genres.filter(g => (g === null || g === void 0 ? void 0 : g.id) !== (genre === null || genre === void 0 ? void 0 : genre.id)));\n  };\n  //handle remove\n  const handleRemoveGenres = genre => {\n    setSelectedGenres(selectedGenres === null || selectedGenres === void 0 ? void 0 : selectedGenres.filter(selected => (selected === null || selected === void 0 ? void 0 : selected.id) !== (genre === null || genre === void 0 ? void 0 : genre.id)));\n    setGenres([...genres, genre]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [selectedGenres === null || selectedGenres === void 0 ? void 0 : selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(MuiChipCustom, {\n      clickable: true,\n      label: genre.name,\n      onDelete: () => handleRemoveGenres(genre),\n      id: \"genreChip\"\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)), genres.map(genre => /*#__PURE__*/_jsxDEV(MuiChipCustom, {\n      label: genre === null || genre === void 0 ? void 0 : genre.name,\n      onClick: () => handleAddGenres(genre),\n      clickable: true,\n      id: \"genreChip\"\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Genres, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = Genres;\nexport default Genres;\nvar _c, _c2;\n$RefreshReg$(_c, \"MuiChipCustom\");\n$RefreshReg$(_c2, \"Genres\");","map":{"version":3,"names":["React","useState","useEffect","Chip","axios","styled","jsxDEV","_jsxDEV","MuiChipCustom","backgroundColor","borderRadius","color","fontSize","_c","Genres","genres","setGenres","selectedGenres","setSelectedGenres","_s","fetchGenres","data","get","process","env","REACT_APP_MOVIE_KEY","handleAddGenres","genre","filter","g","id","handleRemoveGenres","selected","children","map","clickable","label","name","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","$RefreshReg$"],"sources":["/Users/lindseykeller/Desktop/tmbd-app/src/components/Genres.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {Chip } from '@mui/material';\nimport axios from \"axios\";\nimport { styled } from \"@mui/material/styles\"\n\nconst MuiChipCustom = styled(Chip)(() => ({\n  \n    backgroundColor: 'lightblue',\n    borderRadius: 2,\n    color: 'white',   \n \n    '& .MuiChip-label': {\n       color: 'blue', //using the MUI chip label properties\n       fontSize: 20\n    },\n \n    '& .MuiChip-deleteIcon': {\n       color: 'blue',\n       fontSize: 20\n    },\n }));\n\nconst Genres = ({genres, setGenres, selectedGenres, setSelectedGenres}) => {\n    const fetchGenres = async () => {\n     const {data} =   await axios.get(\n            `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_MOVIE_KEY}`\n        );\n        setGenres(data?.genres);\n    };\n    useEffect(() =>{\n        fetchGenres();\n    }, []);\n    //handle add\n    const handleAddGenres = genre => {\n        setSelectedGenres([...selectedGenres, genre]);\n        setGenres(genres?.filter( g => g?.id !== genre?.id))\n    }\n    //handle remove\n    const handleRemoveGenres = genre => {\n      setSelectedGenres(\n        selectedGenres?.filter(\n            selected => selected?.id !== genre?.id\n            )\n        );\n        setGenres([...genres, genre]);\n    }\n    return (\n        <div>\n        {selectedGenres?.map(genre => (\n        <MuiChipCustom\n        key={genre.id}\n      \n        clickable \n        label={genre.name}\n        onDelete={() => handleRemoveGenres(genre)}\n       id = \"genreChip\"\n        />\n        ))}\n          {genres.map(genre=>( \n          <MuiChipCustom \n          key={genre.id}\n          label = {genre?.name}\n          onClick ={() => handleAddGenres(genre)}\n          clickable\n          id = \"genreChip\"\n          />)\n             \n          )}\n        </div>\n    )\n};\n\n\nexport default Genres;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}